//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Xml.Serialization;

namespace EndlessModding.EndlessSpace2.Common.Classes.Amplitude_Simulator
{
    // 
    // This source code was auto-generated by xsd, Version=4.8.3928.0.
    // 


    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SingleSimulationModifierDescriptor))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(BinarySimulationModifierDescriptor))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CountSimulationModifierDescriptor))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SimulationModifierDescriptor
    {

        private bool searchValueFromPathField;

        private ModifierOperation operationField;

        private float priorityField;

        private string tooltipOverrideField;

        private bool tooltipHiddenField;

        private bool tooltipHiddenIfPathInvalidField;

        private bool enforceContextField;

        private bool valueMustBePositiveField;

        private bool useIfInsteadOfWhereField;

        private bool forceFromField;

        private string pathField;

        private string targetPropertyField;

        public SimulationModifierDescriptor()
        {
            this.searchValueFromPathField = false;
            this.priorityField = ((float)(0F));
            this.tooltipOverrideField = "";
            this.tooltipHiddenField = false;
            this.tooltipHiddenIfPathInvalidField = false;
            this.enforceContextField = false;
            this.valueMustBePositiveField = false;
            this.useIfInsteadOfWhereField = false;
            this.forceFromField = false;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool SearchValueFromPath
        {
            get
            {
                return this.searchValueFromPathField;
            }
            set
            {
                this.searchValueFromPathField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ModifierOperation Operation
        {
            get
            {
                return this.operationField;
            }
            set
            {
                this.operationField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Priority
        {
            get
            {
                return this.priorityField;
            }
            set
            {
                this.priorityField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute("")]
        public string TooltipOverride
        {
            get
            {
                return this.tooltipOverrideField;
            }
            set
            {
                this.tooltipOverrideField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool TooltipHidden
        {
            get
            {
                return this.tooltipHiddenField;
            }
            set
            {
                this.tooltipHiddenField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool TooltipHiddenIfPathInvalid
        {
            get
            {
                return this.tooltipHiddenIfPathInvalidField;
            }
            set
            {
                this.tooltipHiddenIfPathInvalidField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool EnforceContext
        {
            get
            {
                return this.enforceContextField;
            }
            set
            {
                this.enforceContextField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool ValueMustBePositive
        {
            get
            {
                return this.valueMustBePositiveField;
            }
            set
            {
                this.valueMustBePositiveField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool UseIfInsteadOfWhere
        {
            get
            {
                return this.useIfInsteadOfWhereField;
            }
            set
            {
                this.useIfInsteadOfWhereField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool ForceFrom
        {
            get
            {
                return this.forceFromField;
            }
            set
            {
                this.forceFromField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Path
        {
            get
            {
                return this.pathField;
            }
            set
            {
                this.pathField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string TargetProperty
        {
            get
            {
                return this.targetPropertyField;
            }
            set
            {
                this.targetPropertyField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    public enum ModifierOperation
    {

        /// <remarks/>
        Force,

        /// <remarks/>
        Addition,

        /// <remarks/>
        Subtraction,

        /// <remarks/>
        Multiplication,

        /// <remarks/>
        Division,

        /// <remarks/>
        Power,

        /// <remarks/>
        Percent,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SingleSimulationModifierDescriptor : SimulationModifierDescriptor
    {

        private string valueField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                this.valueField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BinarySimulationModifierDescriptor : SimulationModifierDescriptor
    {

        private ModifierOperation binaryOperationField;

        private string leftField;

        private string rightField;

        private bool enforceRightAsPerField;

        public BinarySimulationModifierDescriptor()
        {
            this.enforceRightAsPerField = false;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ModifierOperation BinaryOperation
        {
            get
            {
                return this.binaryOperationField;
            }
            set
            {
                this.binaryOperationField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Left
        {
            get
            {
                return this.leftField;
            }
            set
            {
                this.leftField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Right
        {
            get
            {
                return this.rightField;
            }
            set
            {
                this.rightField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool EnforceRightAsPer
        {
            get
            {
                return this.enforceRightAsPerField;
            }
            set
            {
                this.enforceRightAsPerField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CountSimulationModifierDescriptor : SimulationModifierDescriptor
    {

        private string multiplierField;

        private string countPathField;

        public CountSimulationModifierDescriptor()
        {
            this.multiplierField = "1";
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute("1")]
        public string Multiplier
        {
            get
            {
                return this.multiplierField;
            }
            set
            {
                this.multiplierField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string CountPath
        {
            get
            {
                return this.countPathField;
            }
            set
            {
                this.countPathField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SimulationPropertyDescriptor_Proportional))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SimulationPropertyDescriptor
    {

        private float baseValueField;

        private SimulationPropertyComposition compositionField;

        private SimulationPropertyRoundingFunction roundingFunctionField;

        private bool isSealedField;

        private bool isSerializableField;

        private string nameField;

        private string maxValueField;

        private string minValueField;

        public SimulationPropertyDescriptor()
        {
            this.baseValueField = ((float)(0F));
            this.compositionField = SimulationPropertyComposition.None;
            this.roundingFunctionField = SimulationPropertyRoundingFunction.None;
            this.isSealedField = false;
            this.isSerializableField = false;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float BaseValue
        {
            get
            {
                return this.baseValueField;
            }
            set
            {
                this.baseValueField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(SimulationPropertyComposition.None)]
        public SimulationPropertyComposition Composition
        {
            get
            {
                return this.compositionField;
            }
            set
            {
                this.compositionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(SimulationPropertyRoundingFunction.None)]
        public SimulationPropertyRoundingFunction RoundingFunction
        {
            get
            {
                return this.roundingFunctionField;
            }
            set
            {
                this.roundingFunctionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool IsSealed
        {
            get
            {
                return this.isSealedField;
            }
            set
            {
                this.isSealedField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool IsSerializable
        {
            get
            {
                return this.isSerializableField;
            }
            set
            {
                this.isSerializableField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string MaxValue
        {
            get
            {
                return this.maxValueField;
            }
            set
            {
                this.maxValueField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string MinValue
        {
            get
            {
                return this.minValueField;
            }
            set
            {
                this.minValueField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    public enum SimulationPropertyComposition
    {

        /// <remarks/>
        None,

        /// <remarks/>
        Maximum,

        /// <remarks/>
        Minimum,

        /// <remarks/>
        Sum,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    public enum SimulationPropertyRoundingFunction
    {

        /// <remarks/>
        None,

        /// <remarks/>
        Ceil,

        /// <remarks/>
        Floor,

        /// <remarks/>
        Round,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SimulationPropertyDescriptor_Proportional : SimulationPropertyDescriptor
    {

        private string maximumField;

        private string minimumField;

        private float startingRatioField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Maximum
        {
            get
            {
                return this.maximumField;
            }
            set
            {
                this.maximumField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Minimum
        {
            get
            {
                return this.minimumField;
            }
            set
            {
                this.minimumField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float StartingRatio
        {
            get
            {
                return this.startingRatioField;
            }
            set
            {
                this.startingRatioField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "", IsNullable = true)]
    public partial class SimulationDescriptor
    {

        private SimulationPropertyDescriptor[] itemsField;

        private SimulationModifierDescriptor[] items1Field;

        private bool isSerializableField;

        private string nameField;

        private string typeField;

        public SimulationDescriptor()
        {
            this.isSerializableField = true;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Property", typeof(SimulationPropertyDescriptor), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ProportionalProperty", typeof(SimulationPropertyDescriptor_Proportional), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SimulationPropertyDescriptor[] Items
        {
            get
            {
                return this.itemsField;
            }
            set
            {
                this.itemsField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("BinaryModifier", typeof(BinarySimulationModifierDescriptor), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("CountModifier", typeof(CountSimulationModifierDescriptor), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Modifier", typeof(SingleSimulationModifierDescriptor), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SimulationModifierDescriptor[] Items1
        {
            get
            {
                return this.items1Field;
            }
            set
            {
                this.items1Field = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool IsSerializable
        {
            get
            {
                return this.isSerializableField;
            }
            set
            {
                this.isSerializableField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Type
        {
            get
            {
                return this.typeField;
            }
            set
            {
                this.typeField = value;
            }
        }
    }
}