<UserControl x:Class="EndlessModding.EndlessSpace2.Workshop.WorkshopView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:c="Windows.UI.Xaml.Controls"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:en="clr-namespace:EndlessModding.EndlessSpace2.Common.Classes.Amplitude_Runtime"
             xmlns:exten="clr-namespace:EndlessModding.EndlessSpace2.Common.Extensions"
             xmlns:com="clr-namespace:EndlessModding.Common"
             xmlns:converters="clr-namespace:EndlessModding.EndlessSpace2.Common.Converters"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             mc:Ignorable="d"
             d:DesignHeight="776" d:DesignWidth="1304">


    <UserControl.Resources>
        <converters:StringArrayToStringConverter x:Key="StringArrayToStringConverter"></converters:StringArrayToStringConverter>
    </UserControl.Resources>

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding Refresh}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
        <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" MinWidth="200"/>
                <ColumnDefinition Width="3*" MinWidth="600"/>
            </Grid.ColumnDefinitions>

            <Grid MaxHeight="{Binding RelativeSource={RelativeSource AncestorType={x:Type Grid}}, Path=ActualHeight, Mode=OneWay}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="15*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <GroupBox Header="Current Mods" Grid.Row="0">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid Grid.Row="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>
                            </Grid.RowDefinitions>
                            <TextBlock Grid.Column="0" VerticalAlignment="Center">Search:</TextBlock>
                            <TextBox Grid.Column="1" Name="SearchBox0"></TextBox>
                        </Grid>
                        <DataGrid exten:DataGridTextSearch.SearchValue="{Binding ElementName=SearchBox0, Path=Text, UpdateSourceTrigger=PropertyChanged}"  Grid.Row="1" ItemsSource="{Binding Mods, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" ScrollViewer.CanContentScroll="False" HorizontalAlignment="Stretch" IsSynchronizedWithCurrentItem="True" SelectionMode="Single" SelectedItem="{Binding CurrentMod, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" AutoGenerateColumns="False"  Style="{StaticResource MahApps.Styles.DataGrid.Azure}" CanUserAddRows="False" CanUserSortColumns="True">
                            <DataGrid.Columns>
                                <DataGridTextColumn Width="auto" Binding="{Binding Title, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                                    <DataGridTextColumn.Header>Title</DataGridTextColumn.Header>
                                </DataGridTextColumn>
                                <DataGridTextColumn Width="auto" Binding="{Binding Type, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                                    <DataGridTextColumn.Header>Type</DataGridTextColumn.Header>
                                </DataGridTextColumn>
                                <DataGridTextColumn Width="auto" Binding="{Binding Version, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                                    <DataGridTextColumn.Header>Version</DataGridTextColumn.Header>
                                </DataGridTextColumn>
                                <DataGridTextColumn Width="auto" Binding="{Binding Author, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource StringArrayToStringConverter}}" CanUserSort="False">
                                    <DataGridTextColumn.Header>Author</DataGridTextColumn.Header>
                                </DataGridTextColumn>
                                <DataGridTextColumn Width="auto" Binding="{Binding Tags, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" CanUserSort="False">
                                    <DataGridTextColumn.Header>Tags</DataGridTextColumn.Header>
                                </DataGridTextColumn>
                            </DataGrid.Columns>
                            <DataGrid.Resources>
                                <exten:SearchValueConverter x:Key="SearchValueConverter"/>
                                <Style TargetType="{x:Type DataGridCell}">
                                    <Setter Property="exten:DataGridTextSearch.IsTextMatch">
                                        <Setter.Value>
                                            <MultiBinding Converter="{StaticResource SearchValueConverter}">
                                                <Binding RelativeSource="{RelativeSource Self}" Path="Content.Text" />
                                                <Binding RelativeSource="{RelativeSource Self}" Path="(exten:DataGridTextSearch.SearchValue)" />
                                            </MultiBinding>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <Trigger Property="exten:DataGridTextSearch.IsTextMatch" Value="True">
                                            <Setter Property="Background" Value="Orange" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.Resources>
                        </DataGrid>
                    </Grid>
                </GroupBox>
                <Button Grid.Row="1" Command="{Binding NewMod}">New Mod</Button>
            </Grid>

            <Grid Grid.Row="1" Grid.Column="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <Grid Grid.Column="0">
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <GroupBox Header="Mod Info" Grid.Column="0">
                        <StackPanel Grid.Row="0" MaxWidth="600">
                            <Image Source="{Binding Image}" MinWidth="100" MinHeight="100" MaxWidth="500" MaxHeight="500" Stretch="Uniform"/>
                            <Button Content="Browse Image" Command="{Binding GetImage}"/>
                            <TextBlock TextWrapping="Wrap" Text="Title"/>
                            <TextBox TextWrapping="Wrap" Text="{Binding Title}"/>
                            <TextBlock TextWrapping="Wrap" Text="Description"/>
                            <TextBox TextWrapping="Wrap" Text="{Binding Description}"/>
                            <TextBlock TextWrapping="Wrap" Text="Release Notes"/>
                            <TextBox TextWrapping="Wrap" Text="{Binding ReleaseNotes}"/>
                            <TextBlock TextWrapping="Wrap" Text="Version"/>
                            <TextBox TextWrapping="Wrap" Text="{Binding Version}"/>
                            <TextBlock TextWrapping="Wrap" Text="Type"/>
                            <ComboBox Text="{Binding Type}" ItemsSource="{com:EnumToItemsSource {x:Type en:RuntimeModuleType}}"/>
                            <GroupBox Header="Authors" Margin="0,5,0,0">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="auto" MinHeight="50"/>
                                        <RowDefinition Height="auto"/>
                                        <RowDefinition Height="auto"/>
                                    </Grid.RowDefinitions>
                                    <ListView Grid.Row="0" Grid.ColumnSpan="2" ScrollViewer.CanContentScroll="False" HorizontalAlignment="Stretch" IsSynchronizedWithCurrentItem="True" SelectionMode="Single" SelectedIndex="{Binding SelectedAuthor, Mode=TwoWay}" ItemsSource="{Binding Author, Mode=TwoWay}"/>

                                    <TextBox Grid.Row="1" Grid.ColumnSpan="2" Text="{Binding NewAuthor, Mode=OneWayToSource}"/>
                                    <Button Grid.Row="2" Grid.Column="0" Command="{Binding AddAuthor}">Add</Button>
                                    <Button Grid.Row="2" Grid.Column="1" Command="{Binding RemoveAuthor}">Remove</Button>
                                </Grid>
                            </GroupBox>
                            <GroupBox Header="Tags" Margin="0,5,0,0">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="auto" MinHeight="50"/>
                                        <RowDefinition Height="auto"/>
                                        <RowDefinition Height="auto"/>
                                    </Grid.RowDefinitions>
                                    <ListView Grid.Row="0" Grid.ColumnSpan="2" ScrollViewer.CanContentScroll="False" HorizontalAlignment="Stretch" IsSynchronizedWithCurrentItem="True" SelectionMode="Single" SelectedIndex="{Binding SelectedTag, Mode=TwoWay}" ItemsSource="{Binding Tags, Mode=TwoWay}"/>

                                    <ComboBox Grid.Row="1" Grid.ColumnSpan="2" Text="{Binding TagsBox, Mode=OneWayToSource}" ItemsSource="{Binding TagsAvailible}"/>
                                    <Button Grid.Row="2" Grid.Column="0" Command="{Binding AddTag}">Add</Button>
                                    <Button Grid.Row="2" Grid.Column="1" Command="{Binding RemoveTag}">Remove</Button>
                                </Grid>
                            </GroupBox>
                        </StackPanel>
                    </GroupBox>
                    <!--<GroupBox Grid.Row="1" Header="Export">
                        <Button Grid.Row="1" Command="{Binding Export}">Export Mod</Button>
                        </GroupBox>-->
                </Grid>

                <Grid Grid.Column="1" MaxHeight="{Binding RelativeSource={RelativeSource AncestorType={x:Type Grid}}, Path=ActualHeight, Mode=OneWay}">
                    <GroupBox Header="Current Plugins">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid Grid.Row="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto"/>
                                </Grid.RowDefinitions>
                                <TextBlock Grid.Column="0" VerticalAlignment="Center">Search:</TextBlock>
                                <TextBox Grid.Column="1" Name="SearchBox1"></TextBox>
                            </Grid>

                            <DataGrid Grid.Row="1" exten:DataGridTextSearch.SearchValue="{Binding ElementName=SearchBox1, Path=Text, UpdateSourceTrigger=PropertyChanged}" ItemsSource="{Binding Plugins, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" ScrollViewer.CanContentScroll="False" HorizontalAlignment="Stretch" SelectionMode="Single" AutoGenerateColumns="False" CanUserAddRows="False" CanUserSortColumns="True" MaxColumnWidth="250">
                                <DataGrid.Columns>
                                    <DataGridTemplateColumn Width="auto" Header="Details" IsReadOnly="True">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <Grid>
                                                    <CheckBox IsChecked="{Binding Path=Details, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                                </Grid>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>

                                    <DataGridTemplateColumn Width="auto" Header="Enabled" IsReadOnly="True">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <Grid>
                                                    <CheckBox IsChecked="{Binding Path=Enabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                                </Grid>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>

                                    <DataGridTextColumn Width="auto" Binding="{Binding Path=Type, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                                        <DataGridTextColumn.Header>Type</DataGridTextColumn.Header>
                                        <DataGridTextColumn.ElementStyle>
                                            <Style>
                                                <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                                            </Style>
                                        </DataGridTextColumn.ElementStyle>
                                    </DataGridTextColumn>
                                    <DataGridTextColumn Width="auto" Binding="{Binding Path=ExtraTypesString, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                                        <DataGridTextColumn.Header>ExtraTypes</DataGridTextColumn.Header>
                                        <DataGridTextColumn.ElementStyle>
                                            <Style>
                                                <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                                            </Style>
                                        </DataGridTextColumn.ElementStyle>
                                    </DataGridTextColumn>
                                    <DataGridTextColumn Width="auto" Binding="{Binding Path=Contents, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                                        <DataGridTextColumn.Header>Contents</DataGridTextColumn.Header>
                                        <DataGridTextColumn.ElementStyle>
                                            <Style>
                                                <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                                            </Style>
                                        </DataGridTextColumn.ElementStyle>

                                    </DataGridTextColumn>
                                    <DataGridTextColumn Width="auto" Binding="{Binding Path=ExtraContents, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                                        <DataGridTextColumn.Header>Extra Contents</DataGridTextColumn.Header>
                                        <DataGridTextColumn.ElementStyle>
                                            <Style>
                                                <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                                            </Style>
                                        </DataGridTextColumn.ElementStyle>

                                    </DataGridTextColumn>
                                </DataGrid.Columns>
                                <DataGrid.Resources>
                                    <exten:SearchValueConverter x:Key="SearchValueConverter"/>
                                    <Style TargetType="{x:Type DataGridCell}">
                                        <Setter Property="exten:DataGridTextSearch.IsTextMatch">
                                            <Setter.Value>
                                                <MultiBinding Converter="{StaticResource SearchValueConverter}">
                                                    <Binding RelativeSource="{RelativeSource Self}" Path="Content.Text" />
                                                    <Binding RelativeSource="{RelativeSource Self}" Path="(exten:DataGridTextSearch.SearchValue)" />
                                                </MultiBinding>
                                            </Setter.Value>
                                        </Setter>
                                        <Style.Triggers>
                                            <Trigger Property="exten:DataGridTextSearch.IsTextMatch" Value="True">
                                                <Setter Property="Background" Value="Orange" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </DataGrid.Resources>
                            </DataGrid>
                        </Grid>
                    </GroupBox>
                </Grid>

                <Grid Grid.Column="2" MaxHeight="{Binding RelativeSource={RelativeSource AncestorType={x:Type Grid}}, Path=ActualHeight, Mode=OneWay}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="15*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <GroupBox Header="Modules To Export">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid Grid.Row="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto"/>
                                </Grid.RowDefinitions>
                                <TextBlock Grid.Column="0" VerticalAlignment="Center">Search:</TextBlock>
                                <TextBox Grid.Column="1" Name="SearchBox2"></TextBox>
                            </Grid>
                            <DataGrid exten:DataGridTextSearch.SearchValue="{Binding ElementName=SearchBox2, Path=Text, UpdateSourceTrigger=PropertyChanged}"  Grid.Row="1" ItemsSource="{Binding Exportables, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" ScrollViewer.CanContentScroll="False" HorizontalAlignment="Stretch" SelectionMode="Single" AutoGenerateColumns="False" CanUserAddRows="False" CanUserSortColumns="True"  MaxColumnWidth="250">
                                <DataGrid.Columns>
                                    <DataGridTemplateColumn Width="auto" Header="Enabled" IsReadOnly="True">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <Grid>
                                                    <CheckBox IsChecked="{Binding Path=Enabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                                </Grid>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>

                                    <DataGridTextColumn Width="auto" Binding="{Binding Path=Name, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                                        <DataGridTextColumn.Header>Name</DataGridTextColumn.Header>
                                    </DataGridTextColumn>
                                    <DataGridTextColumn Width="auto" Binding="{Binding Path=Type, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                                        <DataGridTextColumn.Header>Type</DataGridTextColumn.Header>
                                    </DataGridTextColumn>
                                </DataGrid.Columns>
                                <DataGrid.Resources>
                                    <exten:SearchValueConverter x:Key="SearchValueConverter"/>
                                    <Style TargetType="{x:Type DataGridCell}">
                                        <Setter Property="exten:DataGridTextSearch.IsTextMatch">
                                            <Setter.Value>
                                                <MultiBinding Converter="{StaticResource SearchValueConverter}">
                                                    <Binding RelativeSource="{RelativeSource Self}" Path="Content.Text" />
                                                    <Binding RelativeSource="{RelativeSource Self}" Path="(exten:DataGridTextSearch.SearchValue)" />
                                                </MultiBinding>
                                            </Setter.Value>
                                        </Setter>
                                        <Style.Triggers>
                                            <Trigger Property="exten:DataGridTextSearch.IsTextMatch" Value="True">
                                                <Setter Property="Background" Value="Orange" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </DataGrid.Resources>
                            </DataGrid>
                        </Grid>
                    </GroupBox>
                    <Button Grid.Row="1" Command="{Binding Export}">Export</Button>
                </Grid>
            </Grid>
        </Grid>
    </ScrollViewer>
</UserControl>
