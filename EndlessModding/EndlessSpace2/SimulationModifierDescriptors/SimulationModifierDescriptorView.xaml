<UserControl x:Class="EndlessModding.EndlessSpace2.SimulationModifierDescriptors.SimulationModifierDescriptorView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:EndlessModding.EndlessSpace2.SimulationModifierDescriptors"
             xmlns:extensions="clr-namespace:EndlessModding.EndlessSpace2.Common.Extensions"
             xmlns:common="clr-namespace:EndlessModding.Common"
             xmlns:en="clr-namespace:EndlessModding.EndlessSpace2.SimulationModifierDescriptors"
             xmlns:amplitudeSimulator="clr-namespace:EndlessModding.EndlessSpace2.Common.Classes.Amplitude_Simulator"
             mc:Ignorable="d"
             d:DesignHeight="450" d:DesignWidth="1000">

    <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
        <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" MinWidth="200"/>
                <ColumnDefinition Width="3*" MinWidth="600"/>
            </Grid.ColumnDefinitions>

            <Grid MaxHeight="{Binding RelativeSource={RelativeSource AncestorType={x:Type Grid}}, Path=ActualHeight, Mode=OneWay}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="15*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <GroupBox Header="Simulation Modifier Descriptors" Grid.Row="0">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid Grid.Row="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>
                            </Grid.RowDefinitions>
                            <TextBlock Grid.Column="0" VerticalAlignment="Center">Search:</TextBlock>
                            <TextBox Grid.Column="1" Name="SearchBox0"></TextBox>
                        </Grid>
                        <DataGrid extensions:DataGridTextSearch.SearchValue="{Binding ElementName=SearchBox0, Path=Text, UpdateSourceTrigger=PropertyChanged}"  Grid.Row="1"  ItemsSource="{Binding Modifiers, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" ScrollViewer.CanContentScroll="True" HorizontalAlignment="Stretch" IsSynchronizedWithCurrentItem="True" SelectionMode="Single" SelectedItem="{Binding CurrentSim, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" AutoGenerateColumns="False"  Style="{StaticResource MahApps.Styles.DataGrid.Azure}" CanUserAddRows="False" CanUserSortColumns="True">
                            <DataGrid.Columns>
                                <DataGridTextColumn Width="auto" Binding="{Binding ModifierType, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                                    <DataGridTextColumn.Header>Type</DataGridTextColumn.Header>
                                </DataGridTextColumn>
                                <DataGridTextColumn Width="auto" Binding="{Binding Path, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                                    <DataGridTextColumn.Header>Path</DataGridTextColumn.Header>
                                </DataGridTextColumn>
                                <DataGridCheckBoxColumn Width="auto" Binding="{Binding Custom, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                                    <DataGridCheckBoxColumn.Header>Custom</DataGridCheckBoxColumn.Header>
                                </DataGridCheckBoxColumn>
                            </DataGrid.Columns>
                            <DataGrid.Resources>
                                <extensions:SearchValueConverter x:Key="SearchValueConverter"/>
                                <Style TargetType="{x:Type DataGridCell}">
                                    <Setter Property="extensions:DataGridTextSearch.IsTextMatch">
                                        <Setter.Value>
                                            <MultiBinding Converter="{StaticResource SearchValueConverter}">
                                                <Binding RelativeSource="{RelativeSource Self}" Path="Content.Text" />
                                                <Binding RelativeSource="{RelativeSource Self}" Path="(extensions:DataGridTextSearch.SearchValue)" />
                                            </MultiBinding>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <Trigger Property="extensions:DataGridTextSearch.IsTextMatch" Value="True">
                                            <Setter Property="Background" Value="Orange" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.Resources>
                        </DataGrid>
                    </Grid>
                </GroupBox>
                <Button Grid.Row="1" Command="{Binding NewSim}" Content="New Simulation Modifier Descriptor"/>
            </Grid>

            <Grid Grid.Column="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="5"/>
                    <ColumnDefinition Width="1*"/>
                </Grid.ColumnDefinitions>

                <GroupBox Header="Simulation Modifier Descriptor" Grid.Column="0">
                    <StackPanel>
                        <TextBlock TextWrapping="Wrap" Text="Type"/>
                        <ComboBox Text="{Binding ModifierType}" ItemsSource="{common:EnumToItemsSource {x:Type en:ModifierEnum}}"/>

                        <Grid Margin="0, 5, 0 , 0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <CheckBox Grid.Column="0" Grid.Row="1" IsChecked="{Binding SearchValueFromPath, Mode=TwoWay}">Search Value From Path</CheckBox>
                            <CheckBox Grid.Column="1" Grid.Row="1" IsChecked="{Binding EnforceContext, Mode=TwoWay}">Enforce Context</CheckBox>
                            <CheckBox Grid.Column="0" Grid.Row="2" Margin="0, 5, 0 , 0" IsChecked="{Binding ValueMustBePositive, Mode=TwoWay}">Value Must Be Positive</CheckBox>
                            <CheckBox Grid.Column="1" Grid.Row="2" Margin="0, 5, 0 , 0" IsChecked="{Binding UseIfInsteadOfWhere, Mode=TwoWay}">Use If Instead Of Where</CheckBox>
                            <CheckBox Grid.Column="0" Grid.Row="3" Margin="0, 5, 0 , 0" IsChecked="{Binding ForceFrom, Mode=TwoWay}">Force From</CheckBox>
                            <CheckBox Grid.Column="0" Grid.Row="0" Margin="0, 5, 0 , 0" IsChecked="{Binding TooltipHidden, Mode=TwoWay}">Tooltip Hidden</CheckBox>
                            <CheckBox Grid.Column="1" Grid.Row="0" Margin="0, 5, 0 , 0" IsChecked="{Binding TooltipHiddenIfPathInvalid, Mode=TwoWay}">Tooltip Hidden If Path Invalid</CheckBox>
                        </Grid>

                        <TextBlock TextWrapping="Wrap" Text="Operation"/>
                        <ComboBox Text="{Binding Operation}" ItemsSource="{common:EnumToItemsSource {x:Type amplitudeSimulator:ModifierOperation}}"/>

                        <TextBlock TextWrapping="Wrap" Text="Priority"/>
                        <TextBox TextWrapping="Wrap" Text="{Binding Priority}"/>

                        <TextBlock TextWrapping="Wrap" Text="Tooltip Override"/>
                        <TextBox TextWrapping="Wrap" Text="{Binding TooltipOverride}"/>

                        <TextBlock TextWrapping="Wrap" Text="Path"/>
                        <TextBox TextWrapping="Wrap" Text="{Binding Path}"/>

                        <TextBlock TextWrapping="Wrap" Text="Target Property"/>
                        <TextBox TextWrapping="Wrap" Text="{Binding TargetProperty}"/>

                    </StackPanel>
                </GroupBox>
                <GridSplitter Grid.Column="1" Width="5" HorizontalAlignment="Stretch" />
                <GroupBox Header="Type Specific" Grid.Column="2">
                    <StackPanel>
                        <GroupBox Header="Single Simulation" IsEnabled="{Binding Single}">
                            <StackPanel>
                                <TextBlock TextWrapping="Wrap" Text="Value"/>
                                <TextBox TextWrapping="Wrap" Text="{Binding Value}"/>
                            </StackPanel>
                        </GroupBox>
                        <GroupBox Header="Binary Simulation" IsEnabled="{Binding Binary}">
                            <StackPanel>
                                <TextBlock TextWrapping="Wrap" Text="Operation"/>
                                <ComboBox Text="{Binding Operation}" ItemsSource="{common:EnumToItemsSource {x:Type amplitudeSimulator:ModifierOperation}}"/>
                                <TextBlock TextWrapping="Wrap" Text="Left"/>
                                <TextBox TextWrapping="Wrap" Text="{Binding Left}"/>
                                <TextBlock TextWrapping="Wrap" Text="Right"/>
                                <TextBox TextWrapping="Wrap" Text="{Binding Right}"/>
                                <Grid Margin="0, 5, 0 , 0">
                                    <CheckBox IsChecked="{Binding EnforceRightAsPer, Mode=TwoWay}">Enforce Right As Per</CheckBox>
                                </Grid>
                            </StackPanel>
                        </GroupBox>
                        <GroupBox Header="Count Simulation" IsEnabled="{Binding Count}">
                            <StackPanel>
                                <TextBlock TextWrapping="Wrap" Text="Multiplier"/>
                                <TextBox TextWrapping="Wrap" Text="{Binding Multiplier}"/>
                                <TextBlock TextWrapping="Wrap" Text="Count Path"/>
                                <TextBox TextWrapping="Wrap" Text="{Binding CountPath}"/>
                            </StackPanel>
                        </GroupBox>

                    </StackPanel>
                </GroupBox>
            </Grid>

        </Grid>
    </ScrollViewer>
</UserControl>
